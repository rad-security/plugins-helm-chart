{{- if eq (include "rad-plugins.deployInReleaseNamespace" .) "true" }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rad-leader-election-role
  namespace: {{ .Release.Namespace }}
  labels:
    app_name: rad-sbom
    app_version: {{ .Values.sbom.image.tag | quote }}
    maintained_by: rad.security
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
{{- end }}

{{- if or (eq (include "rad-plugins.deployInReleaseNamespace" .) "true") (eq (include "rad-plugins.deployInKubeSystem" .) "true") }}
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rad-proxy-role
  labels:
    maintained_by: rad.security
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
{{- end }}

{{- if and ( eq .Values.eksAddon.enabled false ) ( eq (include "rad-plugins.deployInKubeSystem" .) "true" ) }}
---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rad-kube-root-ca-reader
  namespace: kube-system
  labels:
    maintained_by: rad.security
rules:
  - apiGroups: [""]
    resources: [ "configmaps" ]
    resourceNames: [ "kube-root-ca.crt" ]
    verbs: ["get", "watch", "list"]
{{- end }}
