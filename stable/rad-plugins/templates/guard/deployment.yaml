{{- if .Values.guard.enabled -}}
{{- if eq (include "rad-plugins.deployInReleaseNamespace" .) "true" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rad-guard
  namespace: {{ .Release.Namespace }}
  labels:
    app_name: rad-guard
    app_version: {{ .Values.guard.image.tag | quote }}
    maintained_by: rad.security
spec:
  minReadySeconds: 90
  replicas: {{ .Values.guard.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app_name: rad-guard
  template:
    metadata:
      labels:
        app_name: rad-guard
        app_version: {{ .Values.guard.image.tag | quote }}
        maintained_by: rad.security
      annotations:
        {{- if .Values.workloads.disableServiceMesh }}
        linkerd.io/inject: disabled
        sidecar.istio.io/inject: "false"
        {{- end }}
        {{- with .Values.guard.podAnnotations }}
{{ toYaml . | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: rad-guard
      {{- if .Values.workloads.imagePullSecretName }}
      imagePullSecrets:
        - name: {{ .Values.workloads.imagePullSecretName }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
      {{- if .Values.rad.seccompProfile.enabled }}
        seccompProfile:
          type: RuntimeDefault
      {{- end }}
      automountServiceAccountToken: false
      initContainers:
{{ include "rad-plugins.bootstrap-initcontainer" . | indent 8 }}
      containers:
        - name: rad-guard
          image: {{ .Values.guard.image.repository }}:{{ .Values.guard.image.tag }}
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            {{- if .Values.rad.seccompProfile.enabled }}
            seccompProfile:
              type: RuntimeDefault
            {{- end }}
          env:
            - name: AGENT_VERSION
              value: {{ .Values.guard.image.tag | quote }}
            - name: CHART_VERSION
              value: {{ .Chart.Version }}
            - name: API_URL
              value: {{ .Values.rad.apiUrl }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            {{- if .Values.rad.awsSecretId }}
            - name: RAD_AWS_SECRET_ID
              value: {{ .Values.rad.awsSecretId }}
            {{- else }}
{{ include "rad-plugins.access-key-env-secret" . | indent 12 }}
            {{- end }}
            - name: INSTALL_CRDS
              value: "true"
            {{- range $key, $value := .Values.guard.config }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8001
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          {{- if .Values.guard.ephemeralVolumes.enabled }}
          - mountPath: {{ .Values.guard.ephemeralVolumes.mountPath }}
            name: guard-storage
          {{- end }}
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: api-token
            readOnly: true
          resources:
{{ toYaml .Values.guard.resources | indent 12 }}
      {{- with .Values.guard.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.guard.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.guard.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: rad-guard-self-signed-cert
      - name: api-token
        secret:
          secretName: rad-guard-api-token-secret
      {{- if .Values.guard.ephemeralVolumes.enabled }}
      - name: guard-storage
        ephemeral:
          volumeClaimTemplate:
            metadata:
              {{- with .Values.guard.ephemeralVolumes.labels }}
              labels:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- with .Values.guard.ephemeralVolumes.annotations }}
              annotations:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            spec:
              accessModes:
                {{- range .Values.guard.ephemeralVolumes.accessModes }}
                - {{ . }}
                {{- end }}
              {{- if .Values.guard.ephemeralVolumes.storageClassName }}
              {{- if ne .Values.guard.ephemeralVolumes.storageClassName "-" }}
              storageClassName: {{ .Values.guard.ephemeralVolumes.storageClassName }}
              {{- end }}
              {{- end }}
              resources:
                requests:
                  storage: {{ .Values.guard.ephemeralVolumes.size }}
      {{- end }}
{{- end -}}
{{- end -}}
